apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: eureka
  #namespace: cloud
spec:
  rules:
    - host: eureka.k8s.com
      http:
        paths:
          - path: /
            backend:
              serviceName: eureka
              servicePort: 7000
---
apiVersion: v1
kind: Service
metadata:
  name: eureka
  #namespace: cloud
spec:
  clusterIP: None
  ports:
  - name: eureka
    port: 7000
    protocol: TCP
    targetPort: 7000
  selector:
    app: eureka
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: eureka
  #namespace: cloud
spec:
  serviceName: eureka
  replicas: 3
  selector:
    matchLabels:
      app: eureka
  template:
    metadata:
      labels:
        app: eureka
    spec:
      #terminationGracePeriodSeconds: 10    #当删除Pod时，等待时间
      # 此处需要
      #kubectl create secret docker-registry registry-pull-secret --namespace=default \
      #--docker-server=192.168.1.100 --docker-username=admin \
      #--docker-password=Harbor12345 --docker-email=xcp.email@gmail.com
      imagePullSecrets:
        - name: registry-pull-secret
      containers:
        - name: eureka
          image: 192.168.1.100/k8s/eureka:latest
          ports:
            - containerPort: 7000
              protocol: TCP
          env:
            - name: APP_NAME
              value: "eureka"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: APP_OPTS
              value: "--eureka.instance.hostname=${POD_NAME}.${APP_NAME}
                      --registerWithEureka=true
                      --fetchRegistry=true
                      --eureka.instance.preferIpAddress=false
                      --eureka.client.serviceUrl.defaultZone=http://eureka-0.${APP_NAME}:7000/eureka/,http://eureka-1.${APP_NAME}:7000/eureka/,http://eureka-2.${APP_NAME}:7000/eureka/"
          resources:
            limits:
              cpu: 1
              memory: 512Mi
            requests:
              cpu: 0.5
              memory: 125Mi
          readinessProbe:              #就绪探针
            tcpSocket:
              port: 7000
            initialDelaySeconds: 20    #延迟加载时间
            periodSeconds: 5           #重试时间间隔
            timeoutSeconds: 10         #超时时间设置
            failureThreshold: 5        #探测失败的重试次数
          livenessProbe:               #存活探针
            tcpSocket:
              port: 7000
            initialDelaySeconds: 60    #延迟加载时间
            periodSeconds: 5           #重试时间间隔
            timeoutSeconds: 5          #超时时间设置
            failureThreshold: 3        #探测失败的重试次数